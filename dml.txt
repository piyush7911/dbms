dml customer

-- Create the Customer table
CREATE TABLE Customer (
    CustID INT PRIMARY KEY,
    Name VARCHAR(50),
    Cust_Address VARCHAR(100),
    Phone_no VARCHAR(15),
    Email_ID VARCHAR(10),
    Age INT
);

-- Create the Branch table
CREATE TABLE Branch (
    Branch_ID INT PRIMARY KEY,
    Branch_Name VARCHAR(50),
    Address VARCHAR(100)
);

-- Create the Account table
CREATE TABLE Account (
    Account_no INT PRIMARY KEY,
    Branch_ID INT,
    CustID INT,
    date_open DATE,
    Account_type VARCHAR(20),
    Balance DECIMAL(10, 2),
    FOREIGN KEY (Branch_ID) REFERENCES Branch(Branch_ID),
    FOREIGN KEY (CustID) REFERENCES Customer(CustID)
);

INSERT INTO Customer (CustID, Name, Cust_Address, Phone_no, Email_ID, Age)
VALUES
(1, 'John Doe', '123 Main St', '555-123-4567', 'john.doe@example.com', 30),
(2, 'Jane Smith', '456 Elm St', '555-987-6543', 'jane.smith@example.com', 25),
(3, 'Bob Johnson', '789 Oak St', '555-555-1234', 'bob.johnson@example.com', 40);

-- Insert data into the Branch table
INSERT INTO Branch (Branch_ID, Branch_Name, Address)
VALUES
(1, 'Main Branch', '123 Main St'),
(2, 'Elm Branch', '456 Elm St'),
(3, 'Oak Branch', '789 Oak St');

-- Insert data into the Account table
INSERT INTO Account (Account_no, Branch_ID, CustID, date_open, Account_type, Balance)
VALUES
(101, 1, 1, '2023-01-15', 'Savings', 10000.00),
(102, 2, 2, '2023-02-20', 'Checking', 5000.00),
(103, 3, 3, '2023-03-25', 'Savings', 15000.00);




1)
ALTER TABLE Customer
MODIFY COLUMN Email_ID VARCHAR(20);

describe Customer;

2)
ALTER TABLE Customer
MODIFY COLUMN Email_ID VARCHAR(20) NOT NULL;

3)
SELECT COUNT(*) AS TotalCustomers FROM Account
WHERE Balance > 50000;

4)
SELECT AVG(Balance) AS AverageBalance
FROM Account
WHERE Account_type = 'Savings Account';

5)
SELECT *
FROM Customer
WHERE Cust_Address = 'Pune' OR Name LIKE 'A%';

6)
CREATE TABLE Saving_Account AS
SELECT Account_no, Branch_ID, CustID, date_open, Balance
FROM Account
WHERE Account_type = 'Savings';

7)
SELECT *
FROM Customer
WHERE Age IS NOT NULL
AND Age >= 0
AND Age < 120
AND CustID IN (
    SELECT CustID
    FROM Account
    WHERE Balance >= 20000
)
ORDER BY Age;


//---------------------------------------------------------------
//------------------------------------------------------------
2) dml customer without email

-- Create the Customer table
CREATE TABLE Customer (
    CustID INT PRIMARY KEY,
    Name VARCHAR(50),
    Cust_Address VARCHAR(100),
    Phone_no VARCHAR(15),
    Age INT
);

-- Create the Branch table
CREATE TABLE Branch (
    Branch_ID INT PRIMARY KEY,
    Branch_Name VARCHAR(50),
    Address VARCHAR(100)
);

-- Create the Account table
CREATE TABLE Account (
    Account_no INT PRIMARY KEY,
    Branch_ID INT,
    CustID INT,
    date_open DATE,
    Account_type VARCHAR(20),
    Balance DECIMAL(10, 2),
    FOREIGN KEY (Branch_ID) REFERENCES Branch(Branch_ID),
    FOREIGN KEY (CustID) REFERENCES Customer(CustID)
);

-- Insert data into the Customer table
INSERT INTO Customer (CustID, Name, Cust_Address, Phone_no, Age)
VALUES
(1, 'John Doe', '123 Main St', '555-123-4567', 30),
(2, 'Jane Smith', '456 Elm St', '555-987-6543', 25),
(3, 'Bob Johnson', '789 Oak St', '555-555-1234', 40);

-- Insert data into the Branch table
INSERT INTO Branch (Branch_ID, Branch_Name, Address)
VALUES
(1, 'Main Branch', '123 Main St'),
(2, 'Elm Branch', '456 Elm St'),
(3, 'Oak Branch', '789 Oak St');

-- Insert data into the Account table
INSERT INTO Account (Account_no, Branch_ID, CustID, date_open, Account_type, Balance)
VALUES
(101, 1, 1, '2023-01-15', 'Savings', 10000.00),
(102, 2, 2, '2023-02-20', 'Checking', 5000.00),
(103, 3, 3, '2023-03-25', 'Savings', 15000.00);


1)
ALTER TABLE Customer
ADD COLUMN Email_Address VARCHAR(255);

2)
ALTER TABLE Customer
CHANGE COLUMN Email_Address Email_ID VARCHAR(255);

3)
SELECT *
FROM Customer
WHERE CustID = (
    SELECT CustID
    FROM Account
    ORDER BY Balance DESC
    LIMIT 1
);

4)
SELECT c.*
FROM Customer c
JOIN Account a ON c.CustID = a.CustID
WHERE a.Account_type = 'Savings Account'
ORDER BY a.Balance ASC
LIMIT 1;

5)
SELECT CustID, Name, Age
FROM Customer
ORDER BY Age ASC;

6)
SELECT Account_type, GROUP_CONCAT(CONCAT(Name, ' (Branch ID: ', Branch_ID, ')') SEPARATOR ', ') AS Customers
FROM Customer c
JOIN Account a ON c.CustID = a.CustID
GROUP BY Account_type;












